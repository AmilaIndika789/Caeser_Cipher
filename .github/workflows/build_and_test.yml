name: Build, Unit Testing and Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Cache dependencies
      id: cache-python
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.local
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
            
    - name: Save dependencies as tar
      run: |
        tar -czf dependencies.tar.gz ~/.cache/pip ~/.local

    - name: Create artifact
      # Upload dependencies as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-dependencies
        path: dependencies.tar.gz

  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    needs: build

    steps:
    - name: Download dependencies
      uses: actions/download-artifact@v3
      with:
        name: python-dependencies
        path: ./dependencies

    - name: Extract dependencies
      run: |
        tar -xzf ./dependencies/python-dependencies.tar.gz -C ~

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test with pytest
      
      run: |
        pytest -vv

    - name: Generate Code Coverage information
      run: |
        coverage run --source src.pkg --module pytest --verbose tests && coverage report --show-missing

    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@e0b68c6749509c5f83f984dd99a76a1c1a231044 #v4.0.1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
